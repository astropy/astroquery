[tox]
envlist =
    py{37,38,39,310}-test{,-alldeps,-oldestdeps,-devdeps,-predeps}{,-cov}
    codestyle
    build_docs
requires =
    setuptools >= 30.3.0
    pip >= 19.3.1
    tox-pypi-filter >= 0.12
isolated_build = true

[testenv]

# The following option combined with the use of the tox-pypi-filter above allows
# project-wide pinning of dependencies, e.g. if new versions of pytest do not
# work correctly with pytest-astropy plugins. Most of the time the pinnings file
# should be empty.
pypi_filter = https://raw.githubusercontent.com/astropy/ci-helpers/main/pip_pinnings.txt

# Pass through the following environment variables which are needed for the CI
passenv = HOME WINDIR CI

# Run the tests in a temporary directory to make sure that we don't import
# astropy from the source tree
changedir = .tmp/{envname}

description = run tests

deps =
    devdeps: git+https://github.com/astropy/astropy.git#egg=astropy
    devdeps: git+https://github.com/astropy/pyvo.git#egg=pyvo

# TODO: Add more versions to oldestdeps.
# mpl while not a dependency, it's required for the tests, and would pull up a newer numpy version if not pinned.

    oldestdeps: astropy==4.0
    oldestdeps: numpy==1.16
    oldestdeps: matplotlib==3.3.*
    oldestdeps: pyvo==1.1
    cov: codecov

extras =
    test
    alldeps: all


commands =
    pip freeze
    # FIXME: there are too many failures in the docs example gallery, ignore it for now
    #!cov: pytest --pyargs astroquery {toxinidir}/docs --ignore={toxinidir}/docs/gallery* {posargs}
    #cov:  pytest --pyargs astroquery {toxinidir}/docs --ignore={toxinidir}/docs/gallery* --cov astroquery --cov-config={toxinidir}/setup.cfg {posargs}
    #cov: coverage xml -o {toxinidir}/coverage.xml
    python -c "import keyring.backends.SecretService as SS; SS.Keyring.priority"

[testenv:predeps]
description = run tests with pre-releases
pip_pre = True

deps = {[testenv]deps}
passenv = {[testenv]passenv}
pypi_filter = {[testenv]pypi_filter}
changedir = {[testenv]changedir}
extras = {[testenv]extras}
commands = {[testenv]commands}


[testenv:codestyle]
changedir = {toxinidir}
skip_install = true
description = check code style
deps = pycodestyle
commands = pycodestyle astroquery --count

[testenv:build_docs]
changedir = {toxinidir}
description = Building the narrative and API docs
extras = docs
requires =
    sphinx
commands =
    pip freeze
    python setup.py build_sphinx -W
