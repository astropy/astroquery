[tox]
envlist =
    py{37,38,39,310,311,312}-test{,-alldeps,-oldestdeps,-devdeps,-predeps}{,-online}{,-cov}
    codestyle
    linkcheck
    build_docs
requires =
    setuptools >= 30.3.0
    pip >= 19.3.1
isolated_build = true

[testenv]

# Pass through the following environment variables which are needed for the CI
passenv = HOME,WINDIR,CI

# Run the tests in a temporary directory to make sure that we don't import
# astropy from the source tree
changedir = .tmp/{envname}

description = run tests

setenv =
    PYTEST_ARGS = ''
    online: PYTEST_ARGS = --remote-data=any --reruns=1 --reruns-delay 10
    devdeps: PIP_EXTRA_INDEX_URL =  https://pypi.anaconda.org/scientific-python-nightly-wheels/simple https://pypi.anaconda.org/astropy/simple https://pypi.anaconda.org/liberfa/simple

deps =
    devdeps: numpy>=0.0.dev0
    devdeps: matplotlib>=0.0.dev0
    devdeps: git+https://github.com/neutrinoceros/astropy.git@rfc/numpy2/maskedndarray_wrap_array_early_returner
    devdeps: pyerfa>=0.0.dev0
    devdeps: git+https://github.com/astropy/pyvo.git#egg=pyvo

# mpl while not a dependency, it's required for the tests, and would pull up a newer numpy version if not pinned.

    oldestdeps: astropy==4.2.1
    oldestdeps: numpy==1.18
    oldestdeps: matplotlib==3.3.*
    oldestdeps: pyvo==1.1
    oldestdeps: pytest-doctestplus==0.10.1
    oldestdeps: requests==2.19
    oldestdeps: keyring==15.0
    oldestdeps: beautifulsoup4==4.8
    oldestdeps-alldeps: mocpy==0.9

    online: pytest-rerunfailures

extras =
    test
    alldeps: all


commands =
    # Force numpy reinstall to work around upper version limits in downstream dependencies
    devdeps: pip install -U --pre --no-deps --extra-index-url https://pypi.anaconda.org/scientific-python-nightly-wheels/simple numpy

    python -m pip freeze
    !cov: pytest --pyargs astroquery {toxinidir}/docs {env:PYTEST_ARGS} {posargs}
    cov:  pytest --pyargs astroquery {toxinidir}/docs --cov astroquery --cov-config={toxinidir}/setup.cfg {env:PYTEST_ARGS} {posargs}
    cov: coverage xml -o {toxinidir}/coverage.xml

pip_pre =
    predeps: true
    !predeps: false

[testenv:codestyle]
changedir = {toxinidir}
skip_install = true
description = check code style
deps = flake8
commands = flake8 astroquery --count

[testenv:build_docs]
changedir = {toxinidir}/docs
description = Building the narrative and API docs
extras = docs
requires =
    sphinx
commands =
    python -m pip freeze
    sphinx-build -W . _build/html


[testenv:linkcheck]
changedir = {toxinidir}/docs
description = check the links in the HTML docs
extras = docs
commands =
    python -m pip freeze
    sphinx-build -W --keep-going -b linkcheck . _build/html
