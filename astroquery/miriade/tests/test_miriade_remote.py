# Licensed under a 3-clause BSD style license - see LICENSE.rst
import pytest
from numpy import allclose

from ... import miriade


@pytest.mark.remote_data
class TestMiriadeClass:

    def test_ephemerides_query_ceres(self):
        # check values of Ceres for a given epoch
        res = miriade.Miriade.ephemerides(name='a:Ceres', observer='500',
                                          ep='2017-01-01', nbd=31)

        dt_str = ['2017-01-{:02d}T00:00:00.00'.format(i) for i in range(1, 32)]
        assert list(res['datetime_str']) == dt_str

        r_list = [2.460608175, 2.473499895, 2.486431948, 2.499400575,
        2.512402106, 2.525432983, 2.538489775, 2.551569198,
        2.564668125, 2.577783592, 2.59091279, 2.604053036, 2.617201741,
         2.630356364, 2.643514373, 2.656673219, 2.669830317,
         2.682983052, 2.696128777, 2.709264824, 2.722388511,
         2.735497152, 2.748588056, 2.761658532, 2.774705886,
         2.787727429, 2.800720471, 2.813682333, 2.826610357,
         2.839501917, 2.852354442]
        assert allclose(res['r'], r_list)

    def test_ephemerides_query_halley(self):
        # check comet ephemerides using options
        res = miriade.Miriade.ephemerides(name='c:p/halley',
                                          observer='290',
                                          ep='2080-01-01', nbd=248,
                                          step='3h')

        assert len(res) == 248

        dt_str = ['2080-01-01T{:02d}:00:00.00'.format(i) for i in range(0, 22, 3)]
        assert list(res['datetime_str'][:8]) == dt_str

        r_dot = [-13.45718, -13.40358, -13.3499, -13.29614, -13.2423,
        -13.18839, -13.1344, -13.08033, -13.02618, -12.97196,
        -12.91766, -12.86329, -12.80884, -12.75432, -12.69973,
        -12.64506, -12.59032, -12.53551, -12.48062, -12.42567,
        -12.37064, -12.31555, -12.26038, -12.20514, -12.14983,
        -12.09446, -12.03901, -11.9835, -11.92792, -11.87227,
        -11.81655, -11.76077, -11.70492, -11.649, -11.59301, -11.53696,
        -11.48084, -11.42465, -11.3684, -11.31208, -11.25569,
        -11.19924, -11.14272, -11.08613, -11.02948, -10.97276,
        -10.91597, -10.85912, -10.8022, -10.74521, -10.68815,
        -10.63103, -10.57384, -10.51658, -10.45926, -10.40186,
        -10.3444, -10.28687, -10.22927, -10.17161, -10.11387,
        -10.05607, -9.99819, -9.94025, -9.88224, -9.82415, -9.766,
        -9.70778, -9.64949, -9.59112, -9.53269, -9.47419, -9.41562,
        -9.35698, -9.29826, -9.23948, -9.18063, -9.12171, -9.06271,
        -9.00365, -8.94452, -8.88531, -8.82604, -8.7667, -8.70728,
        -8.6478, -8.58825, -8.52863, -8.46894, -8.40919, -8.34936,
        -8.28947, -8.2295, -8.16947, -8.10938, -8.04921, -7.98898,
        -7.92868, -7.86832, -7.80789, -7.74739, -7.68683, -7.6262,
        -7.56551, -7.50475, -7.44393, -7.38305, -7.3221, -7.26109,
        -7.20001, -7.13888, -7.07768, -7.01642, -6.9551, -6.89372,
        -6.83228, -6.77077, -6.70921, -6.64759, -6.58591, -6.52417,
        -6.46238, -6.40052, -6.33861, -6.27664, -6.21462, -6.15254,
        -6.09041, -6.02821, -5.96597, -5.90367, -5.84132, -5.77891,
        -5.71645, -5.65394, -5.59137, -5.52876, -5.46609, -5.40337,
        -5.34061, -5.27779, -5.21492, -5.15201, -5.08904, -5.02603,
        -4.96297, -4.89987, -4.83671, -4.77352, -4.71027, -4.64698,
        -4.58365, -4.52027, -4.45685, -4.39338, -4.32988, -4.26633,
        -4.20274, -4.13911, -4.07543, -4.01172, -3.94797, -3.88418,
        -3.82035, -3.75648, -3.69258, -3.62863, -3.56466, -3.50064,
        -3.43659, -3.37251, -3.30839, -3.24424, -3.18005, -3.11583,
        -3.05158, -2.9873, -2.92299, -2.85864, -2.79427, -2.72987,
        -2.66544, -2.60098, -2.53649, -2.47198, -2.40743, -2.34287,
        -2.27828, -2.21366, -2.14902, -2.08435, -2.01966, -1.95495,
        -1.89022, -1.82547, -1.76069, -1.6959, -1.63108, -1.56625,
        -1.50139, -1.43652, -1.37163, -1.30673, -1.24181, -1.17687,
        -1.11192, -1.04695, -0.98197, -0.91698, -0.85197, -0.78695,
        -0.72192, -0.65688, -0.59183, -0.52676, -0.46169, -0.39661,
        -0.33152, -0.26642, -0.20132, -0.13621, -0.07109, -0.00597,
        0.05916, 0.12429, 0.18943, 0.25457, 0.31971, 0.38486, 0.45,
        0.51515, 0.5803, 0.64545, 0.7106, 0.77575, 0.8409, 0.90604,
        0.97119, 1.03633, 1.10147, 1.1666, 1.23173, 1.29686, 1.36198,
        1.4271, 1.49221, 1.55732, 1.62242]
        assert allclose(res['r_dot'], r_dot)
